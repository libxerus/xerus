stages:
  - build_homepage
  - build_gcc_nocheck
  - test_gcc_nocheck
  - build_clang
  - test_clang
  - code_coverage
  - build_python
  - test_python

job_build_homepage:
  stage: build_homepage
  script: "cp .gitlab-ci-configs/.config.mk.ci.cc config.mk; make -C doc doc && scp -r doc/html xerusweb:libxerus.org-443"
  when: always
  only:
    - master
  allow_failure: true

job_build_gcc_nocheck:
  stage: build_gcc_nocheck
  script: "g++ --version; cp .gitlab-ci-configs/.config.mk.ci.gcc.nocheck config.mk; make XerusTest_static"
  when: always
  artifacts:
    expire_in: 1h30min
    paths:
      - XerusTest_static

job_test_gcc_nocheck:
  stage: test_gcc_nocheck
  script: "echo $CI_COMMIT_SHA; ./XerusTest_static all"
  when: on_success
  dependencies:
    - job_build_gcc_nocheck

job_build_clang:
  stage: build_clang
  script: "clang++ --version; cp .gitlab-ci-configs/.config.mk.ci.clang config.mk; make XerusTest_static"
  when: always
  artifacts:
    expire_in: 1h30min
    paths:
      - XerusTest_static

job_test_clang:
  stage: test_clang
  script: "echo $CI_COMMIT_SHA; ./XerusTest_static all"
  when: on_success
  dependencies:
    - job_build_clang

job_code_coverage:
  stage: code_coverage
  script: "clang++ --version; cp .gitlab-ci-configs/.config.mk.ci.cc config.mk; mkdir -p build; make test &> build/build_output.txt || { tail -n 500 build/build_output.txt && readelf -S XerusTest_static && objdump -s -j .cc_loc XerusTest_static && false; }; tail -n 500 build/build_output.txt"
  when: on_success
  artifacts:
    expire_in: 3h
    paths:
      - build/build_output.txt

job_build_python:
  stage: build_python
  script: "g++ --version; cp .gitlab-ci-configs/.config.mk.ci.gcc.python config.mk; make python"
  when: always
  variables:
    GIT_SUBMODULE_STRATEGY: normal
  artifacts:
    expire_in: 1h30min
    paths:
      - xerus

job_test_python:
  stage: test_python
  script: 'python3 -c "import xerus; assert xerus.__version__ == \"$(cat VERSION)\""'
  when: on_success
  dependencies:
    - job_build_python
